<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="Cirrious.Sphero.WorkBench.UI.WinRT.Views.SpheroView"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Cirrious.Sphero.WorkBench.UI.WinRT.Views"
    xmlns:common="using:Cirrious.Sphero.WorkBench.UI.WinRT.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:callisto="using:Callisto.Controls" xmlns:controls="using:Cirrious.Sphero.WorkBench.UI.WinRT.Controls"
    mc:Ignorable="d">

    <Page.Resources>

        <!-- TODO: Delete this line if the key AppName is declared in App.xaml -->
        <x:String x:Key="AppName">Ball Control</x:String>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Grid.Column="1" Text="{StaticResource AppName}" Style="{StaticResource PageHeaderTextStyle}"/>
        </Grid>
        
        <Grid Grid.Row="1">
        <ComboBox x:Name="SelectView" HorizontalAlignment="Right" VerticalAlignment="Top" SelectionChanged="Selector_OnSelectionChanged" Margin="0,19,0,0">
            <ComboBoxItem Content="Move" IsSelected="True"></ComboBoxItem>
            <ComboBoxItem Content="Heading"></ComboBoxItem>
            <ComboBoxItem Content="Colour"></ComboBoxItem>
            <ComboBoxItem Content="Tilt"></ComboBoxItem>
        </ComboBox>
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="MoveGrid">
                <controls:Joystick x:Name="MoveJoystick" ></controls:Joystick>
            </Grid>
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="TurnGrid">
                <controls:Joystick x:Name="TurnJoystick" ></controls:Joystick>
            </Grid>
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="ColorGrid" DataContext="{Binding Color}">
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="120">
                    <Slider Background="#2f0000" Foreground="Red" Value="{Binding Red, Mode=TwoWay}" Minimum="0" Maximum="255"></Slider>
                    <Slider Background="#002f00" Foreground="Green" Value="{Binding Green, Mode=TwoWay}" Minimum="0" Maximum="255"></Slider>
                    <Slider Background="#00002f" Foreground="Blue" Value="{Binding Blue, Mode=TwoWay}" Minimum="0" Maximum="255"></Slider>
                </StackPanel>
            </Grid>
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="TiltGrid" Margin="0,-25,0,25">
                <controls:Joystick x:Name="TiltJoystick" ></controls:Joystick>
            </Grid>

            <!--
            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="TurnRectangle">
            </Rectangle>
            -->
        </Grid>
        
        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
